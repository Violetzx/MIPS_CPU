`timescale 1ns/1ps

module test_register();

reg clock;
//reg reset;
reg [4:0] read1;
reg [4:0] read2;
reg [4:0] write;
reg we;
reg [31:0] write_data;

wire [31:0] read_data1;
wire [31:0] read_data2;


//Generate clock at 100 MHz
initial begin
	clock <= 1'b0;
	//reset <= 1'b1;
	forever #10 clock <= ~clock;
end

initial begin
	read1 = 0;
	read2 = 0;
	write = 0;
	we = 1'b0;
	write_data = 0;
	
	@(negedge clock);
	
	read1 = 0;
	read2 = 0;
	write = 1;
	we = 1'b1;
	write_data = 32'h00000001;
	$finish;
	//@(negedge clock);
	
end

//Drop reset after 200 ns
always begin
	//#200 reset <= 1'b0;
end
	
	
register registers(	
			.clk(clock),
			.we(we),
			.read1(read1),
			.read2(read2),
			.write(write),
			.write_data(write_data),
			.read_data1(read_data1),
			.read_data2(read_data2)
			);
				
endmodule